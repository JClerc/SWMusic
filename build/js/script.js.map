{"version":3,"sources":["script.js","app.js","audio.polyfill.js","canvas.polyfill.js","episode1.js","hyperspace.js","navigation.js","selection.js","vote.js","main.js"],"names":["App","$","document","querySelector","bind","$$","querySelectorAll","identifier","gotoUp","current","next","direction","Error","currentName","getAttribute","call","classList","remove","add","addEventListener","animationend","e","removeEventListener","setLocation","home","window","location","reload","isChangingHash","hash","setTimeout","gotoHash","homeFallback","length","substring","page","contains","HYPERSPACE","callbacks","state","i","callback","push","AudioContext","webkitAudioContext","mozAudioContext","lastTime","vendors","x","requestAnimationFrame","cancelAnimationFrame","element","currTime","Date","getTime","timeToCall","Math","max","id","clearTimeout","episodeIsPlaying","canvas","getContext","width","innerWidth","height","innerHeight","audioContext","sourceNode","analyserNode","javascriptNode","amplitudeArray","frequencyArray","context","frequency","amplitudeCount","frequencyCount","audioData","audioPlaying","sampleSize","audioUrl","middleWidth","middleHeight","lastDraw","energyInterval","averageVolume","sinOffset","PI","setupAudioNodes","createBufferSource","createAnalyser","createScriptProcessor","Uint8Array","frequencyBinCount","connect","destination","loadSound","url","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buffer","playSound","onError","send","start","loop","console","warn","getAverageVolume","array","average","values","strokeStyle","shadowBlur","shadowColor","drawEnergy","lineWidth","k","amplitudeLength","amplitudeOffset","amplitudeDraw","size","beginPath","moveTo","lineTo","random","stroke","drawSound","clearCanvas","value","frenquencyLength","frenquencyOffset","frequencyDraw","sin","cos","clearRect","ex","now","getByteTimeDomainData","getByteFrequencyData","setInterval","clearInterval","stop","GLOBAL_SPEED","HYPERSPACE_RUN","interval","select","starsCount","stars","createStar","randomX","randomY","color","y","xs","ys","s","lineCap","begin","bindNavigation","this","preventDefault","elements","lastMove","leftOffset","screen","rightOffset","screenScale","selectCards","percentDivisor","selectionListener","event","percent","screenX","style","transform","log","buttons","bindVote","elt","innerHTML"],"mappings":"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","file":"script.js","sourcesContent":["'use strict';\n\n/**\n * Create App object\n *\n */\n\nvar App = {},\n    $ = document.querySelector.bind(document),\n    $$ = document.querySelectorAll.bind(document);\n\n(function () {\n\n    App.goto = function (identifier, gotoUp) {\n        var current = $('section.visible'),\n            next = $('.page.' + identifier),\n            direction = gotoUp ? 'up' : 'down';\n\n        if (!next || typeof gotoUp !== 'boolean') {\n            throw new Error('Wrong arguments: ' + next + ', ' + gotoUp);\n        } else if (current == next) {\n            throw new Error('Moving to the same page..');\n        } else {\n            if (current) {\n                var currentName = current.getAttribute('data-page');\n                App.call(currentName, 'unloading');\n                current.classList.remove('visible');\n                current.classList.add('exit-' + direction);\n                current.addEventListener('animationend', function animationend(e) {\n                    App.call(currentName, 'unloaded');\n                    current.removeEventListener('animationend', animationend);\n                    current.classList.remove('exit-' + direction);\n                });\n            }\n            App.call(identifier, 'loading');\n            next.classList.add('visible');\n            next.classList.add('enter-' + direction);\n            next.addEventListener('animationend', function animationend(e) {\n                App.call(identifier, 'loaded');\n                next.removeEventListener('animationend', animationend);\n                next.classList.remove('enter-' + direction);\n                App.setLocation(identifier);\n            });\n        }\n    };\n\n    App.home = function () {\n        // Rerun the page to restart the canvas\n        window.location.reload();\n    };\n\n    var isChangingHash = false;\n\n    App.setLocation = function (hash) {\n        isChangingHash = true;\n        window.location.hash = '#/' + hash;\n        setTimeout(function () {\n            isChangingHash = false;\n        }, 1);\n    };\n\n    App.gotoHash = function (homeFallback) {\n        if (isChangingHash) return;\n        if (window.location.hash && window.location.hash.length > 2) {\n            var hash = window.location.hash.substring(2),\n                page = $('.page.' + hash);\n\n            if (hash === 'home') {\n                App.home();\n                return;\n            } else if (page && page.classList.contains('page')) {\n                var current = $('section.visible');\n                if (current) {\n                    current.classList.remove('visible');\n                    var currentName = current.getAttribute('data-page');\n                    App.call(currentName, 'unloading');\n                    App.call(currentName, 'unloaded');\n                }\n                page.classList.add('visible');\n                App.call(hash, 'loading');\n                App.call(hash, 'loaded');\n                window.HYPERSPACE = false;\n                return;\n            }\n        }\n        if (homeFallback) {\n            App.home();\n        }\n    };\n\n    var callbacks = {};\n\n    App.call = function (page, state) {\n        if (callbacks[page] && callbacks[page][state]) {\n            for (var i = callbacks[page][state].length - 1; i >= 0; i--) {\n                callbacks[page][state][i]();\n            }\n        }\n    };\n\n    App.bind = function (page, state, callback) {\n        if (!callbacks[page]) {\n            callbacks[page] = {};\n        }\n        if (!callbacks[page][state]) {\n            callbacks[page][state] = [];\n        }\n        callbacks[page][state].push(callback);\n    };\n})();\n\"use strict\";\n\nwindow.AudioContext = (function () {\n    return window.AudioContext || window.webkitAudioContext || window.mozAudioContext;\n})();\n'use strict';\n\n/* Compatible avec tous les navigateurs */\n(function () {\n    var lastTime = 0;\n    var vendors = ['webkit', 'moz'];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = window.setTimeout(function () {\n            callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n    };\n\n    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {\n        clearTimeout(id);\n    };\n})();\n'use strict';\n\n(function () {\n\n    var episodeIsPlaying = false;\n\n    var canvas = $('.episode-1 .drawing canvas');\n\n    if (!canvas || !canvas.getContext) return;\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    var context = canvas.getContext('2d'),\n        width = canvas.width,\n        height = canvas.height;\n\n    var frequency = 100,\n        amplitudeCount = 30,\n        frequencyCount = 40;\n\n    // Tutorial from: http://apprentice.craic.com/tutorials/30\n\n    var audioContext;\n    var audioBuffer;\n    var sourceNode;\n    var analyserNode;\n    var javascriptNode;\n    var audioData = null;\n    var audioPlaying = false;\n    var sampleSize = 1024;\n    var amplitudeArray;\n    var frequencyArray;\n    var audioUrl = 'audio/episode1.mp3';\n    var middleWidth = ~ ~(width / 2);\n    var middleHeight = ~ ~(height / 2);\n    var lastDraw = 0;\n    var energyInterval = -1;\n    var averageVolume = 0;\n    var sinOffset = Math.PI / 2;\n\n    var setupAudioNodes = function setupAudioNodes() {\n        sourceNode = audioContext.createBufferSource();\n        analyserNode = audioContext.createAnalyser();\n        javascriptNode = audioContext.createScriptProcessor(sampleSize, 1, 1);\n        // Create the array for the data values\n        amplitudeArray = new Uint8Array(analyserNode.frequencyBinCount);\n        frequencyArray = new Uint8Array(analyserNode.frequencyBinCount);\n        // Now connect the nodes together\n        sourceNode.connect(audioContext.destination);\n        sourceNode.connect(analyserNode);\n        analyserNode.connect(javascriptNode);\n        javascriptNode.connect(audioContext.destination);\n    };\n\n    // Load the audio from the URL via Ajax and store it in global variable audioData\n    // Note that the audio load is asynchronous\n    var loadSound = function loadSound(url) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        // When loaded, decode the data and play the sound\n        request.onload = function () {\n            audioContext.decodeAudioData(request.response, function (buffer) {\n                audioData = buffer;\n                playSound(audioData);\n            }, onError);\n        };\n        request.send();\n    };\n\n    // Play the audio and loop until stopped\n    var playSound = function playSound(buffer) {\n        sourceNode.buffer = buffer;\n        // sourceNode.start();    // Play the sound now\n        sourceNode.start(0, 38);\n        sourceNode.loop = true;\n        audioPlaying = true;\n    };\n\n    var onError = function onError(e) {\n        console.warn(e);\n    };\n\n    var getAverageVolume = function getAverageVolume(array) {\n        var values = 0;\n        var average;\n\n        var length = array.length;\n\n        // get all the frequency amplitudes\n        for (var i = 0; i < length; i++) {\n            values += array[i];\n        }\n\n        average = values / length;\n        return average;\n    };\n\n    context.strokeStyle = 'white';\n    context.shadowBlur = 100;\n    context.shadowColor = 'rgb(220, 20, 220)';\n\n    var drawEnergy = function drawEnergy() {\n        // RANDOM ELECTRIC ARC\n\n        // clearCanvas();\n        context.lineWidth = 3;\n\n        var k,\n            i,\n            value = 0;\n        var amplitudeLength = amplitudeArray.length;\n        var amplitudeOffset = ~ ~(amplitudeLength / amplitudeCount);\n        var amplitudeDraw = ~ ~(width / amplitudeCount);\n        var size = 150;\n\n        context.beginPath();\n        context.moveTo(0, middleHeight);\n        k = 0;\n        for (i = amplitudeOffset; i < amplitudeLength - amplitudeOffset; i += amplitudeOffset) {\n            k++;\n            context.lineTo(k * amplitudeDraw, (Math.random() * size - size / 2) * averageVolume + middleHeight);\n        }\n        context.lineTo(width, middleHeight);\n        context.stroke();\n    };\n\n    var drawSound = function drawSound() {\n        if (episodeIsPlaying) {\n            clearCanvas();\n\n            var k,\n                i,\n                value = 0;\n\n            // FREQUENCY VARIABLE\n\n            var frenquencyLength = frequencyArray.length - 300;\n            var frenquencyOffset = ~ ~(frenquencyLength / frequencyCount);\n            var frequencyDraw = ~ ~(middleWidth / frequencyCount);\n\n            // DOUBLE FREQUENCY ARC - SYMMETRIC\n\n            context.lineWidth = ~ ~(3 + Math.random() * 6);\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n\n            k = 0;\n            for (i = frenquencyLength - frenquencyOffset; i >= 0; i -= frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                context.lineTo(k * frequencyDraw, height - middleHeight - value * middleHeight * Math.sin(sinOffset + k / 5));\n            }\n\n            k = 0;\n            for (i = 0; i < frenquencyLength - frenquencyOffset * 2; i += frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                context.lineTo(middleWidth + k * frequencyDraw, height - middleHeight - value * middleHeight * Math.cos(sinOffset + k / 5));\n            }\n\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n            context.lineWidth = ~ ~(2 + Math.random() * 4);\n\n            var amplitudeLength = amplitudeArray.length;\n            var amplitudeOffset = ~ ~(amplitudeLength / amplitudeCount);\n            var amplitudeDraw = ~ ~(width / amplitudeCount);\n\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n            k = 0;\n            for (i = amplitudeOffset; i < amplitudeLength - amplitudeOffset; i += amplitudeOffset) {\n                k++;\n                value = height - height * amplitudeArray[i] / 256 - 1;\n                context.lineTo(k * amplitudeDraw, value);\n            }\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n            // context.beginPath();\n            // context.moveTo(0, middleHeight);\n            // k = 0;\n            // for (i = amplitudeLength - amplitudeOffset; i >= amplitudeOffset; i -= amplitudeOffset) {\n            //     k++;\n            //     value = height - (height * amplitudeArray[i] / 256) - 1;\n            //     context.lineTo(k * amplitudeDraw, value);\n            // }\n            // context.lineTo(width, middleHeight);\n            // context.stroke();\n\n            // context.beginPath();\n            // context.moveTo(0, middleHeight);\n            // k = 0;\n            // for (i = amplitudeLength - amplitudeOffset; i >= amplitudeOffset; i -= amplitudeOffset) {\n            //     k++;\n            //     context.lineTo(k * amplitudeDraw, Math.random() * 50 - 25 + middleHeight);\n            // }\n            // context.lineTo(width, middleHeight);\n            // context.stroke();\n        }\n    };\n\n    var clearCanvas = function clearCanvas() {\n        context.clearRect(0, 0, width, height);\n    };\n\n    try {\n        audioContext = new AudioContext();\n    } catch (ex) {\n        console.warn('Web Audio API is not supported in this browser');\n    }\n\n    App.bind('episode-1', 'loaded', function (e) {\n        episodeIsPlaying = true;\n\n        setupAudioNodes();\n\n        // setup the event handler that is triggered every time enough samples have been collected\n        // trigger the audio analysis and draw the results\n        javascriptNode.addEventListener('audioprocess', function (e) {\n            var now = new Date().getTime();\n            if (lastDraw > now - frequency) return;\n            lastDraw = now;\n            // get the Time Domain data for this sample\n            averageVolume = getAverageVolume(frequencyArray) / 100;\n            analyserNode.getByteTimeDomainData(amplitudeArray);\n            analyserNode.getByteFrequencyData(frequencyArray);\n\n            // draw the display if the audio is playing\n            if (audioPlaying === true) {\n                window.requestAnimationFrame(drawSound);\n            }\n        });\n\n        // Load the Audio the first time through, otherwise play it from the buffer\n        if (audioData === null) {\n            loadSound(audioUrl);\n        } else {\n            playSound(audioData);\n        }\n\n        energyInterval = setInterval(drawEnergy, 62);\n    });\n\n    App.bind('episode-1', 'unloading', function () {\n        clearInterval(energyInterval);\n        episodeIsPlaying = false;\n        sourceNode.stop(0);\n        audioPlaying = false;\n    });\n\n    App.bind('episode-1', 'unloaded', function () {\n        clearCanvas();\n    });\n})();\n'use strict';\n\n(function () {\n\n    var GLOBAL_SPEED = 0.1,\n        HYPERSPACE_RUN = true;\n\n    App.bind('home', 'unloading', function () {\n        var interval = setInterval(function () {\n            GLOBAL_SPEED = (GLOBAL_SPEED + 0.1) * 1.3;\n            if (GLOBAL_SPEED > 70) {\n                clearInterval(interval);\n            }\n        }, 100);\n\n        var home = $('.page.home'),\n            select = $('.page.select');\n\n        // select.addEventListener('animationend', function begin(e) {\n        //     select.removeEventListener('animationend', begin);\n        // });\n\n        home.classList.add('exit-hyperspace');\n        select.classList.add('enter-hyperspace');\n    });\n\n    App.bind('home', 'unloaded', function () {\n        HYPERSPACE_RUN = false;\n\n        var home = $('.page.home'),\n            select = $('.page.select');\n\n        home.classList.remove('visible');\n        home.classList.remove('exit-hyperspace');\n        select.classList.remove('enter-hyperspace');\n    });\n\n    (function (canvas) {\n\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\n        if (canvas.getContext) {\n            var context = canvas.getContext('2d'),\n                width = canvas.width,\n                height = canvas.height,\n                starsCount = 100,\n                centerRadius = 100,\n                length = 10,\n                stars = [];\n\n            var createStar = function createStar() {\n                var randomX = Math.random(),\n                    randomY = Math.random(),\n                    color = ~ ~(Math.random() * 80 + 20);\n\n                return {\n                    x: randomX * width,\n                    y: randomY * height,\n                    xs: (randomX * width - width / 2) / 500,\n                    ys: (randomY * height - height / 2) / 500,\n                    size: ~ ~(color / 20),\n                    length: Math.random() * length,\n                    color: 'rgb(' + color + ', ' + color + ', ' + ~ ~(color + Math.random() * 20) + ')'\n                };\n            };\n\n            for (var i = 0; i < starsCount; i++) {\n                stars.push(createStar());\n            }\n\n            (function loop() {\n                if (HYPERSPACE_RUN) {\n\n                    window.requestAnimationFrame(loop);\n                    context.clearRect(0, 0, width, height);\n\n                    for (var i = 0; i < starsCount; i++) {\n                        var s = stars[i];\n                        if (s.x < 0 || s.y < 0 || s.x > width || s.y > height) {\n                            s = stars[i] = createStar();\n                        }\n                        context.strokeStyle = s.color;\n                        context.lineWidth = s.size;\n                        context.shadowBlur = 5;\n                        context.lineCap = 'round';\n                        context.shadowColor = \"#555\";\n                        context.beginPath();\n                        context.moveTo(s.x, s.y);\n                        context.lineTo(s.x + 0.1 + s.length * s.xs * GLOBAL_SPEED, s.y + s.length * s.ys * GLOBAL_SPEED);\n                        context.stroke();\n                        s.x += s.xs * GLOBAL_SPEED;\n                        s.y += s.ys * GLOBAL_SPEED;\n                    }\n                }\n            })();\n        }\n    })($('.hyperspace'));\n})();\n'use strict';\n\n/**\n * Navigation between pages\n *\n */\n\n(function () {\n\n    // Bind begin button to hyperspace animation\n    $('.begin').addEventListener('click', function (e) {\n        App.call('home', 'unloading');\n        App.call('select', 'loading');\n        var select = $('.page.select');\n        select.addEventListener('animationend', function begin(e) {\n            select.removeEventListener('animationend', begin);\n            App.call('home', 'unloaded');\n            App.call('select', 'loaded');\n            $('.page.select').classList.add('visible');\n            App.setLocation('select');\n        });\n    });\n\n    // Bind navigation elements to animations\n    var bindNavigation = function bindNavigation(element) {\n        element.addEventListener('click', function (e) {\n            App.goto(this.getAttribute('data-target'), this.getAttribute('data-direction') === 'up');\n            e.preventDefault();\n        });\n    };\n\n    var elements = $$('.navigation');\n    for (var i = elements.length - 1; i >= 0; i--) {\n        bindNavigation(elements[i]);\n    }\n\n    // Change page if hash change\n    window.addEventListener('hashchange', App.gotoHash);\n})();\n'use strict';\n\n/**\n * Episode selection\n *\n */\n\n(function () {\n\n    var select = {\n        lastMove: 0,\n        leftOffset: window.screen.width / 2 - 100,\n        rightOffset: 0,\n        screenScale: 100 - 100 / 1.75,\n        selectCards: $('.select .cards')\n    };\n\n    select.percentDivisor = window.screen.width - select.rightOffset - select.leftOffset;\n\n    var selectionListener = function selectionListener(event) {\n        var now = new Date().getTime();\n        if (select.lastMove < now - 20) {\n\n            select.lastMove = now;\n            var percent = (event.screenX - select.leftOffset) / select.percentDivisor;\n\n            if (percent < 0) {\n                percent = 0;\n            } else if (percent > 1) {\n                percent = 1;\n            }\n\n            select.selectCards.style.transform = 'translateZ(0) translateX(-' + percent * select.screenScale + '%)';\n        }\n    };\n\n    App.bind('select', 'loading', function () {\n        console.log('LOADING');\n        document.addEventListener('mousemove', selectionListener);\n    });\n\n    App.bind('select', 'unloading', function () {\n        document.removeEventListener('mousemove', selectionListener);\n    });\n})();\n'use strict';\n\n(function () {\n\n    var buttons = $$('.button-vote');\n    var bindVote = function bindVote(elt) {\n        elt.addEventListener('click', function (e) {\n            for (var i = buttons.length - 1; i >= 0; i--) {\n                buttons[i].innerHTML = \"Je vote\";\n            }\n            elt.innerHTML = \"Vote validé !\";\n        });\n    };\n\n    for (var i = buttons.length - 1; i >= 0; i--) {\n        bindVote(buttons[i]);\n    }\n})();\n'use strict';\n\n// If a hash is already set, go to matching page\nApp.gotoHash(false);\n\n// Everything is OK !\nconsole.log('Libs and App loaded !');","/**\n * Create App object\n *\n */\n\nvar App = {},\n    $ = document.querySelector.bind(document),\n    $$ = document.querySelectorAll.bind(document);\n\n(function () {\n\n    App.goto = function (identifier, gotoUp) {\n        var current = $('section.visible'),\n            next = $('.page.' + identifier),\n            direction = gotoUp ? 'up' : 'down';\n\n        if (!next || typeof gotoUp !== 'boolean') {\n            throw new Error('Wrong arguments: ' + next + ', ' + gotoUp);\n        } else if (current == next) {\n            throw new Error('Moving to the same page..');\n        } else {\n            if (current) {\n                var currentName = current.getAttribute('data-page');\n                App.call(currentName, 'unloading');\n                current.classList.remove('visible');\n                current.classList.add('exit-' + direction);\n                current.addEventListener('animationend', function animationend(e) {\n                    App.call(currentName, 'unloaded');\n                    current.removeEventListener('animationend', animationend);\n                    current.classList.remove('exit-' + direction);\n                });\n            }\n            App.call(identifier, 'loading');\n            next.classList.add('visible');\n            next.classList.add('enter-' + direction);\n            next.addEventListener('animationend', function animationend(e) {\n                App.call(identifier, 'loaded');\n                next.removeEventListener('animationend', animationend);\n                next.classList.remove('enter-' + direction);\n                App.setLocation(identifier);\n            });\n        }\n    };\n\n    App.home = function () {\n        // Rerun the page to restart the canvas\n        window.location.reload();\n    };\n\n    var isChangingHash = false;\n\n    App.setLocation = function (hash) {\n        isChangingHash = true;\n        window.location.hash = '#/' + hash;\n        setTimeout(function () {\n            isChangingHash = false;\n        }, 1);\n    };\n\n    App.gotoHash = function (homeFallback) {\n        if (isChangingHash) return;\n        if (window.location.hash && window.location.hash.length > 2) {\n            var hash = window.location.hash.substring(2),\n                page = $('.page.' + hash);\n\n            if (hash === 'home') {\n                App.home();\n                return;\n            } else if (page && page.classList.contains('page')) {\n                var current = $('section.visible');\n                if (current) {\n                    current.classList.remove('visible');\n                    var currentName = current.getAttribute('data-page');\n                    App.call(currentName, 'unloading');\n                    App.call(currentName, 'unloaded');\n                }\n                page.classList.add('visible');\n                App.call(hash, 'loading');\n                App.call(hash, 'loaded');\n                window.HYPERSPACE = false;\n                return;\n            }\n        }\n        if (homeFallback) {\n            App.home();\n        }\n    };\n\n    var callbacks = {};\n    \n    App.call = function (page, state) {\n        if (callbacks[page] && callbacks[page][state]) {\n            for (var i = callbacks[page][state].length - 1; i >= 0; i--) {\n                callbacks[page][state][i]();\n            }\n        }\n    };\n\n    App.bind = function (page, state, callback) {\n        if (!callbacks[page]) {\n            callbacks[page] = {};\n        }\n        if (!callbacks[page][state]) {\n            callbacks[page][state] = [];\n        }\n        callbacks[page][state].push(callback);\n    };\n\n})();\n\n","\nwindow.AudioContext = (function() {\n    return  window.AudioContext || window.webkitAudioContext || window.mozAudioContext;\n})();\n","/* Compatible avec tous les navigateurs */\n(function() {\n    var lastTime = 0;\n    var vendors = ['webkit', 'moz'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n          window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame)\n        window.requestAnimationFrame = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n              timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n\n    if (!window.cancelAnimationFrame)\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n}());\n","\n(function () {\n\n    var episodeIsPlaying = false;\n\n    var canvas = $('.episode-1 .drawing canvas');\n\n    if (!canvas || !canvas.getContext) return;\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    var context = canvas.getContext('2d'),\n        width = canvas.width,\n        height = canvas.height;\n\n    var frequency = 100,\n        amplitudeCount = 30,\n        frequencyCount = 40;\n\n    // Tutorial from: http://apprentice.craic.com/tutorials/30\n\n    var audioContext;\n    var audioBuffer;\n    var sourceNode;\n    var analyserNode;\n    var javascriptNode;\n    var audioData = null;\n    var audioPlaying = false;\n    var sampleSize = 1024;\n    var amplitudeArray;\n    var frequencyArray;\n    var audioUrl = 'audio/episode1.mp3';\n    var middleWidth = ~~(width / 2);\n    var middleHeight = ~~(height / 2);\n    var lastDraw = 0;\n    var energyInterval = -1;\n    var averageVolume = 0;\n    var sinOffset = Math.PI / 2;\n\n    var setupAudioNodes = function () {\n        sourceNode     = audioContext.createBufferSource();\n        analyserNode   = audioContext.createAnalyser();\n        javascriptNode = audioContext.createScriptProcessor(sampleSize, 1, 1);\n        // Create the array for the data values\n        amplitudeArray = new Uint8Array(analyserNode.frequencyBinCount);\n        frequencyArray = new Uint8Array(analyserNode.frequencyBinCount);\n        // Now connect the nodes together\n        sourceNode.connect(audioContext.destination);\n        sourceNode.connect(analyserNode);\n        analyserNode.connect(javascriptNode);\n        javascriptNode.connect(audioContext.destination);\n    };\n\n    // Load the audio from the URL via Ajax and store it in global variable audioData\n    // Note that the audio load is asynchronous\n    var loadSound = function (url) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        // When loaded, decode the data and play the sound\n        request.onload = function () {\n            audioContext.decodeAudioData(request.response, function (buffer) {\n                audioData = buffer;\n                playSound(audioData);\n            }, onError);\n        };\n        request.send();\n    };\n\n    // Play the audio and loop until stopped\n    var playSound = function (buffer) {\n        sourceNode.buffer = buffer;\n        // sourceNode.start();    // Play the sound now\n        sourceNode.start(0, 38);\n        sourceNode.loop = true;\n        audioPlaying = true;\n    };\n\n    var onError = function (e) {\n        console.warn(e);\n    };\n\n    var getAverageVolume = function (array) {\n        var values = 0;\n        var average;\n \n        var length = array.length;\n \n        // get all the frequency amplitudes\n        for (var i = 0; i < length; i++) {\n            values += array[i];\n        }\n \n        average = values / length;\n        return average;\n    };\n\n    context.strokeStyle = 'white';\n    context.shadowBlur = 100;\n    context.shadowColor = 'rgb(220, 20, 220)';\n\n    var drawEnergy = function () {\n        // RANDOM ELECTRIC ARC\n\n        // clearCanvas();\n        context.lineWidth = 3;\n\n        var k, i, value = 0;\n        var amplitudeLength = amplitudeArray.length;\n        var amplitudeOffset = ~~(amplitudeLength / amplitudeCount);\n        var amplitudeDraw = ~~(width / amplitudeCount);\n        var size = 150;\n\n        context.beginPath();\n        context.moveTo(0, middleHeight);\n        k = 0;\n        for (i = amplitudeOffset; i < amplitudeLength - amplitudeOffset; i += amplitudeOffset) {\n            k++;\n            context.lineTo(k * amplitudeDraw, (Math.random() * size - size/2) * averageVolume + middleHeight);\n        }\n        context.lineTo(width, middleHeight);\n        context.stroke();\n    };\n\n    var drawSound = function () {\n        if (episodeIsPlaying) {\n            clearCanvas();\n\n            var k, i, value = 0;\n\n            // FREQUENCY VARIABLE\n\n            var frenquencyLength = frequencyArray.length - 300;\n            var frenquencyOffset = ~~(frenquencyLength / frequencyCount);\n            var frequencyDraw = ~~(middleWidth / frequencyCount);\n\n            // DOUBLE FREQUENCY ARC - SYMMETRIC\n\n            context.lineWidth = ~~(3 + Math.random() * 6);\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n\n            k = 0;\n            for (i = frenquencyLength - frenquencyOffset; i >= 0; i -= frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                context.lineTo(k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.sin(sinOffset + k / 5));\n            }\n\n            k = 0;\n            for (i = 0; i < frenquencyLength - frenquencyOffset * 2; i += frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                context.lineTo(middleWidth + k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.cos(sinOffset + k / 5));\n            }\n\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n\n            context.lineWidth = ~~(2 + Math.random() * 4);\n\n            var amplitudeLength = amplitudeArray.length;\n            var amplitudeOffset = ~~(amplitudeLength / amplitudeCount);\n            var amplitudeDraw = ~~(width / amplitudeCount);\n\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n            k = 0;\n            for (i = amplitudeOffset; i < amplitudeLength - amplitudeOffset; i += amplitudeOffset) {\n                k++;\n                value = height - (height * amplitudeArray[i] / 256) - 1;\n                context.lineTo(k * amplitudeDraw, value);\n\n            }\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n\n            // context.beginPath();\n            // context.moveTo(0, middleHeight);\n            // k = 0;\n            // for (i = amplitudeLength - amplitudeOffset; i >= amplitudeOffset; i -= amplitudeOffset) {\n            //     k++;\n            //     value = height - (height * amplitudeArray[i] / 256) - 1;\n            //     context.lineTo(k * amplitudeDraw, value);\n            // }\n            // context.lineTo(width, middleHeight);\n            // context.stroke();\n\n            // context.beginPath();\n            // context.moveTo(0, middleHeight);\n            // k = 0;\n            // for (i = amplitudeLength - amplitudeOffset; i >= amplitudeOffset; i -= amplitudeOffset) {\n            //     k++;\n            //     context.lineTo(k * amplitudeDraw, Math.random() * 50 - 25 + middleHeight);\n            // }\n            // context.lineTo(width, middleHeight);\n            // context.stroke();\n        }\n    };\n\n    var clearCanvas = function () {\n        context.clearRect(0, 0, width, height);\n    };\n\n    try {\n        audioContext = new AudioContext();\n    } catch (ex) {\n        console.warn('Web Audio API is not supported in this browser');\n    }\n\n\n    App.bind('episode-1', 'loaded', function (e) {\n        episodeIsPlaying = true;\n\n        setupAudioNodes();\n\n        // setup the event handler that is triggered every time enough samples have been collected\n        // trigger the audio analysis and draw the results\n        javascriptNode.addEventListener('audioprocess', function (e) {\n            var now = new Date().getTime();\n            if (lastDraw > now - frequency) return;\n            lastDraw = now;\n            // get the Time Domain data for this sample\n            averageVolume = getAverageVolume(frequencyArray) / 100;\n            analyserNode.getByteTimeDomainData(amplitudeArray);\n            analyserNode.getByteFrequencyData(frequencyArray);\n\n            // draw the display if the audio is playing\n            if (audioPlaying === true) {\n                window.requestAnimationFrame(drawSound);\n            }\n        });\n\n        // Load the Audio the first time through, otherwise play it from the buffer\n        if (audioData === null) {\n            loadSound(audioUrl);\n        } else {\n            playSound(audioData);\n        }\n\n        energyInterval = setInterval(drawEnergy, 62);\n\n    });\n\n    App.bind('episode-1', 'unloading', function () {\n        clearInterval(energyInterval);\n        episodeIsPlaying = false;\n        sourceNode.stop(0);\n        audioPlaying = false;\n    });\n\n    App.bind('episode-1', 'unloaded', function () {\n        clearCanvas();\n    });\n\n})();\n","\n(function () {\n\n    var GLOBAL_SPEED = 0.1,\n        HYPERSPACE_RUN = true;\n\n    App.bind('home', 'unloading', function () {\n        var interval = setInterval(function () {\n            GLOBAL_SPEED = (GLOBAL_SPEED + 0.1) * 1.3;\n            if (GLOBAL_SPEED > 70) {\n                clearInterval(interval);\n            }\n        }, 100);\n\n        var home = $('.page.home'),\n            select = $('.page.select');\n\n        // select.addEventListener('animationend', function begin(e) { \n        //     select.removeEventListener('animationend', begin);\n        // });\n\n        home.classList.add('exit-hyperspace');\n        select.classList.add('enter-hyperspace');\n    });\n\n    App.bind('home', 'unloaded', function () {\n        HYPERSPACE_RUN = false;\n\n        var home = $('.page.home'),\n            select = $('.page.select');\n\n        home.classList.remove('visible');\n        home.classList.remove('exit-hyperspace');\n        select.classList.remove('enter-hyperspace');\n    });\n\n    (function (canvas) {\n\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\n        if (canvas.getContext) {\n            var context = canvas.getContext('2d'),\n                width = canvas.width,\n                height = canvas.height,\n                starsCount = 100,\n                centerRadius = 100,\n                length = 10,\n                stars = [];\n\n            var createStar = function () {\n                var randomX = Math.random(),\n                    randomY = Math.random(),\n                    color = ~~(Math.random() * 80 + 20);\n\n                return {\n                    x: randomX * width,\n                    y: randomY * height,\n                    xs: (randomX * width - width/2) / 500,\n                    ys: (randomY * height - height/2) / 500,\n                    size: ~~(color / 20),\n                    length: Math.random() * length,\n                    color: 'rgb(' + color + ', ' + color + ', ' + ~~(color + Math.random() * 20) + ')'\n                };\n            };\n\n            for (var i = 0; i < starsCount; i++) {\n                stars.push(createStar());\n            }\n\n            (function loop() {\n                if (HYPERSPACE_RUN) {\n\n                    window.requestAnimationFrame(loop);\n                    context.clearRect(0, 0, width, height);\n\n                    for (var i = 0; i < starsCount; i++) {\n                        var s = stars[i];\n                        if (s.x < 0 || s.y < 0 || s.x > width || s.y > height) {\n                            s = stars[i] = createStar();\n                        }\n                        context.strokeStyle = s.color;\n                        context.lineWidth = s.size;\n                        context.shadowBlur = 5;\n                        context.lineCap = 'round';\n                        context.shadowColor = \"#555\";\n                        context.beginPath();\n                        context.moveTo(s.x, s.y);\n                        context.lineTo(s.x + 0.1 + s.length * s.xs * GLOBAL_SPEED, s.y + s.length * s.ys * GLOBAL_SPEED);\n                        context.stroke();\n                        s.x += s.xs * GLOBAL_SPEED;\n                        s.y += s.ys * GLOBAL_SPEED;\n                    }\n                }\n            })();\n        }\n\n    })($('.hyperspace'));\n\n})();","/**\n * Navigation between pages\n *\n */\n\n(function () {\n\n    // Bind begin button to hyperspace animation\n    $('.begin').addEventListener('click', function (e) {\n        App.call('home', 'unloading');\n        App.call('select', 'loading');\n        var select = $('.page.select');\n        select.addEventListener('animationend', function begin(e) { \n            select.removeEventListener('animationend', begin);\n            App.call('home', 'unloaded');\n            App.call('select', 'loaded');\n            $('.page.select').classList.add('visible');\n            App.setLocation('select');\n        });\n    });\n\n    // Bind navigation elements to animations\n    var bindNavigation = function (element) {\n        element.addEventListener('click', function (e) {\n            App.goto(this.getAttribute('data-target'), this.getAttribute('data-direction') === 'up');\n            e.preventDefault();\n        });\n    };\n\n    var elements = $$('.navigation');\n    for (var i = elements.length - 1; i >= 0; i--) {\n        bindNavigation(elements[i]);\n    }\n\n    // Change page if hash change\n    window.addEventListener('hashchange', App.gotoHash);\n\n})();\n","/**\n * Episode selection\n *\n */\n\n(function () {\n\n    var select = {\n        lastMove: 0,\n        leftOffset: window.screen.width / 2 - 100,\n        rightOffset: 0,\n        screenScale: (100 - 100 / 1.75),\n        selectCards: $('.select .cards')\n    };\n\n    select.percentDivisor = window.screen.width - select.rightOffset - select.leftOffset;\n\n    var selectionListener = function(event) {\n        var now = new Date().getTime();\n        if (select.lastMove < now - 20) {\n\n            select.lastMove = now;\n            var percent = (event.screenX - select.leftOffset) / select.percentDivisor;\n            \n            if (percent < 0) {\n                percent = 0;\n            } else if (percent > 1) {\n                percent = 1;\n            }\n\n            select.selectCards.style.transform = 'translateZ(0) translateX(-' + percent * select.screenScale + '%)';\n        }\n    };\n\n    App.bind('select', 'loading', function () {\n        console.log('LOADING');\n        document.addEventListener('mousemove', selectionListener);\n    });\n\n    App.bind('select', 'unloading', function () {\n        document.removeEventListener('mousemove', selectionListener);\n    });\n\n})();\n","\n(function () {\n\n    var buttons = $$('.button-vote');\n    var bindVote = function (elt) {\n        elt.addEventListener('click', function (e) {\n            for (var i = buttons.length - 1; i >= 0; i--) {\n                buttons[i].innerHTML = \"Je vote\";\n            }\n            elt.innerHTML = \"Vote validé !\";\n        });\n    };\n\n    for (var i = buttons.length - 1; i >= 0; i--) {\n        bindVote(buttons[i]);\n    }\n\n})();\n","\n// If a hash is already set, go to matching page\nApp.gotoHash(false);\n\n// Everything is OK !\nconsole.log('Libs and App loaded !');\n"],"sourceRoot":"/source/"}