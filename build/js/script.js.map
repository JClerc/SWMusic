{"version":3,"sources":["script.js","ambientlight.js","app.js","audio.polyfill.js","canvas.polyfill.js","episode1.js","episode2.js","hyperspace.js","loader.js","navigation.js","selection.js","vote.js","main.js"],"names":["AmbientLight","video","ambient","this","light1","$","light2","interval","App","document","querySelector","bind","$$","querySelectorAll","identifier","gotoUp","current","next","direction","Error","currentName","getAttribute","call","classList","remove","add","addEventListener","animationend","e","removeEventListener","setLocation","home","window","location","reload","isChangingHash","hash","setTimeout","gotoHash","homeFallback","length","substring","page","contains","HYPERSPACE","callbacks","state","i","callback","push","AudioContext","webkitAudioContext","mozAudioContext","lastTime","vendors","x","requestAnimationFrame","cancelAnimationFrame","element","currTime","Date","getTime","timeToCall","Math","max","id","clearTimeout","prototype","play","self","setInterval","applyTo","children","canvas","createElement","getContext","width","height","appendChild","drawImage","toggle","stop","clearInterval","episodeIsPlaying","ambientLight","innerWidth","innerHeight","audioContext","sourceNode","analyserNode","javascriptNode","amplitudeArray","frequencyArray","context","frequency","amplitudeCount","frequencyCount","audioData","audioPlaying","sampleSize","audioUrl","middleWidth","middleHeight","lastDraw","energyInterval","averageVolume","sinOffset","PI","setupAudioNodes","createBufferSource","createAnalyser","createScriptProcessor","Uint8Array","frequencyBinCount","connect","destination","loadSound","url","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buffer","playSound","onError","send","start","loop","console","warn","getAverageVolume","array","average","values","strokeStyle","shadowBlur","shadowColor","drawEnergy","lineWidth","k","amplitudeLength","amplitudeOffset","amplitudeDraw","size","beginPath","moveTo","lineTo","random","stroke","drawSound","clearCanvas","value","frenquencyLength","frenquencyOffset","frequencyDraw","sin","cos","clearRect","ex","currentTime","now","getByteTimeDomainData","getByteFrequencyData","pause","GLOBAL_SPEED","HYPERSPACE_RUN","select","starsCount","stars","createStar","randomX","randomY","color","y","xs","ys","s","lineCap","preloadImage","img","Image","src","init","images","begin","bindNavigation","preventDefault","elements","lastMove","leftOffset","screen","rightOffset","screenScale","selectCards","percentDivisor","selectionListener","event","percent","screenX","style","transform","log","buttons","bindVote","elt","innerHTML"],"mappings":"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","file":"script.js","sourcesContent":["'use strict';\n\n/**\n * Create App object\n *\n */\n\nvar App = {},\n    $ = document.querySelector.bind(document),\n    $$ = document.querySelectorAll.bind(document);\n\n(function () {\n\n    App.goto = function (identifier, gotoUp) {\n        var current = $('section.visible'),\n            next = $('.page.' + identifier),\n            direction = gotoUp ? 'up' : 'down';\n\n        if (!next || typeof gotoUp !== 'boolean') {\n            throw new Error('Wrong arguments: ' + next + ', ' + gotoUp);\n        } else if (current == next) {\n            throw new Error('Moving to the same page..');\n        } else {\n            if (current) {\n                var currentName = current.getAttribute('data-page');\n                App.call(currentName, 'unloading');\n                current.classList.remove('visible');\n                current.classList.add('exit-' + direction);\n                current.addEventListener('animationend', function animationend(e) {\n                    App.call(currentName, 'unloaded');\n                    current.removeEventListener('animationend', animationend);\n                    current.classList.remove('exit-' + direction);\n                });\n            }\n            App.call(identifier, 'loading');\n            next.classList.add('visible');\n            next.classList.add('enter-' + direction);\n            next.addEventListener('animationend', function animationend(e) {\n                App.call(identifier, 'loaded');\n                next.removeEventListener('animationend', animationend);\n                next.classList.remove('enter-' + direction);\n                App.setLocation(identifier);\n            });\n        }\n    };\n\n    App.home = function () {\n        // Rerun the page to restart the canvas\n        window.location.reload();\n    };\n\n    var isChangingHash = false;\n\n    App.setLocation = function (hash) {\n        isChangingHash = true;\n        window.location.hash = '#/' + hash;\n        setTimeout(function () {\n            isChangingHash = false;\n        }, 1);\n    };\n\n    App.gotoHash = function (homeFallback) {\n        if (isChangingHash) return;\n        if (window.location.hash && window.location.hash.length > 2) {\n            var hash = window.location.hash.substring(2),\n                page = $('.page.' + hash);\n\n            if (hash === 'home') {\n                App.home();\n                return;\n            } else if (page && page.classList.contains('page')) {\n                var current = $('section.visible');\n                if (current) {\n                    current.classList.remove('visible');\n                    var currentName = current.getAttribute('data-page');\n                    App.call(currentName, 'unloading');\n                    App.call(currentName, 'unloaded');\n                }\n                page.classList.add('visible');\n                App.call(hash, 'loading');\n                App.call(hash, 'loaded');\n                window.HYPERSPACE = false;\n                return;\n            }\n        }\n        if (homeFallback) {\n            App.home();\n        }\n    };\n\n    var callbacks = {};\n\n    App.call = function (page, state) {\n        if (callbacks[page] && callbacks[page][state]) {\n            for (var i = callbacks[page][state].length - 1; i >= 0; i--) {\n                callbacks[page][state][i]();\n            }\n        }\n    };\n\n    App.bind = function (page, state, callback) {\n        if (!callbacks[page]) {\n            callbacks[page] = {};\n        }\n        if (!callbacks[page][state]) {\n            callbacks[page][state] = [];\n        }\n        callbacks[page][state].push(callback);\n    };\n})();\n\"use strict\";\n\nwindow.AudioContext = (function () {\n    return window.AudioContext || window.webkitAudioContext || window.mozAudioContext;\n})();\n'use strict';\n\n/* Compatible avec tous les navigateurs */\n(function () {\n    var lastTime = 0;\n    var vendors = ['webkit', 'moz'];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = window.setTimeout(function () {\n            callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n    };\n\n    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {\n        clearTimeout(id);\n    };\n})();\n'use strict';\n\nfunction AmbientLight(video, ambient) {\n    this.video = video;\n    this.ambient = ambient;\n    this.light1 = $('.light-1', ambient);\n    this.light2 = $('.light-2', ambient);\n    this.interval = -1;\n}\n\nAmbientLight.prototype.play = function () {\n    this.ambient.classList.add('active');\n    var self = this;\n\n    this.interval = setInterval(function () {\n\n        var applyTo = self.light1.classList.contains('active') ? self.light2 : self.light1;\n\n        // We show a 1x1 canvas in 100% width/height\n\n        if (!applyTo.children[0]) {\n            // If canvas doesn't exist, we create it\n            var canvas = document.createElement('canvas'),\n                context = canvas.getContext('2d');\n\n            canvas.width = 1;\n            canvas.height = 1;\n            canvas.classList.add('background');\n\n            applyTo.appendChild(canvas);\n        }\n\n        applyTo.children[0].getContext('2d').drawImage(self.video, 0, 0, 1, 1);\n\n        // As we can't do transition on gradient, we use 2 layers\n        // And we apply gradient to one, and do a transition on opacity\n        // Then next time we apply gradient to other one, etc...\n        self.light1.classList.toggle('active');\n        self.light2.classList.toggle('active');\n    }, 1000);\n};\n\nAmbientLight.prototype.stop = function () {\n    this.ambient.classList.remove('active');\n    clearInterval(this.interval);\n};\n'use strict';\n\n(function () {\n\n    var episodeIsPlaying = false;\n\n    var canvas = $('.episode-1 .drawing canvas');\n    var video = $('.episode-1 .video');\n    var ambientLight = new AmbientLight(video, $('.episode-1 .ambient'));\n\n    if (!canvas || !canvas.getContext) return;\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    var context = canvas.getContext('2d'),\n        width = canvas.width,\n        height = canvas.height;\n\n    var frequency = 30,\n        amplitudeCount = 30,\n        frequencyCount = 40;\n\n    // Tutorial from: http://apprentice.craic.com/tutorials/30\n\n    var audioContext;\n    var audioBuffer;\n    var sourceNode;\n    var analyserNode;\n    var javascriptNode;\n    var audioData = null;\n    var audioPlaying = false;\n    var sampleSize = 1024;\n    var amplitudeArray;\n    var frequencyArray;\n    var audioUrl = 'media/episode1.mp3';\n    var middleWidth = ~ ~(width / 2);\n    var middleHeight = ~ ~(height / 2);\n    var lastDraw = 0;\n    var energyInterval = -1;\n    var averageVolume = 0;\n    var sinOffset = Math.PI / 2;\n\n    var setupAudioNodes = function setupAudioNodes() {\n        sourceNode = audioContext.createBufferSource();\n        analyserNode = audioContext.createAnalyser();\n        javascriptNode = audioContext.createScriptProcessor(sampleSize, 1, 1);\n        // Create the array for the data values\n        amplitudeArray = new Uint8Array(analyserNode.frequencyBinCount);\n        frequencyArray = new Uint8Array(analyserNode.frequencyBinCount);\n        // Now connect the nodes together\n        sourceNode.connect(audioContext.destination);\n        sourceNode.connect(analyserNode);\n        analyserNode.connect(javascriptNode);\n        javascriptNode.connect(audioContext.destination);\n    };\n\n    // Load the audio from the URL via Ajax and store it in global variable audioData\n    // Note that the audio load is asynchronous\n    var loadSound = function loadSound(url) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        // When loaded, decode the data and play the sound\n        request.onload = function () {\n            audioContext.decodeAudioData(request.response, function (buffer) {\n                audioData = buffer;\n                playSound(audioData);\n            }, onError);\n        };\n        request.send();\n    };\n\n    // Play the audio and loop until stopped\n    var playSound = function playSound(buffer) {\n        sourceNode.buffer = buffer;\n        // sourceNode.start();    // Play the sound now\n        sourceNode.start(0, 38);\n        sourceNode.loop = true;\n        audioPlaying = true;\n    };\n\n    var onError = function onError(e) {\n        console.warn(e);\n    };\n\n    var getAverageVolume = function getAverageVolume(array) {\n        var values = 0;\n        var average;\n\n        var length = array.length;\n\n        // get all the frequency amplitudes\n        for (var i = 0; i < length; i++) {\n            values += array[i];\n        }\n\n        average = values / length;\n        return average;\n    };\n\n    context.strokeStyle = 'white';\n    context.shadowBlur = 100;\n    context.shadowColor = 'rgb(220, 20, 220)';\n\n    var drawEnergy = function drawEnergy() {\n        // RANDOM ELECTRIC ARC\n\n        // clearCanvas();\n        context.lineWidth = 3;\n\n        var k,\n            i,\n            value = 0;\n        var amplitudeLength = amplitudeArray.length;\n        var amplitudeOffset = ~ ~(amplitudeLength / amplitudeCount);\n        var amplitudeDraw = ~ ~(width / amplitudeCount);\n        var size = 150;\n\n        context.beginPath();\n        context.moveTo(0, middleHeight);\n        k = 0;\n        for (i = amplitudeOffset; i < amplitudeLength - amplitudeOffset; i += amplitudeOffset) {\n            k++;\n            context.lineTo(k * amplitudeDraw, (Math.random() * size - size / 2) * averageVolume + middleHeight);\n        }\n        context.lineTo(width, middleHeight);\n        context.stroke();\n    };\n\n    var drawSound = function drawSound() {\n        if (episodeIsPlaying) {\n            clearCanvas();\n\n            var k,\n                i,\n                value = 0;\n\n            // FREQUENCY VARIABLE\n\n            var frenquencyLength = frequencyArray.length - 300;\n            var frenquencyOffset = ~ ~(frenquencyLength / frequencyCount);\n            var frequencyDraw = ~ ~(middleWidth / frequencyCount);\n\n            // DOUBLE FREQUENCY ARC - SYMMETRIC\n\n            context.lineWidth = ~ ~(3 + Math.random() * 6);\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n\n            k = 0;\n            for (i = frenquencyLength - frenquencyOffset; i >= 0; i -= frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                // context.lineTo(k * frequencyDraw, height - middleHeight - (value * middleHeight));\n                // context.lineTo(k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.sin(sinOffset + k / 5));\n                context.lineTo(k * frequencyDraw, height - middleHeight - value * middleHeight * Math.sin(sinOffset + k / 5) * averageVolume);\n            }\n\n            k = 0;\n            for (i = 0; i < frenquencyLength - frenquencyOffset * 2; i += frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                // context.lineTo(middleWidth + k * frequencyDraw, height - middleHeight - (value * middleHeight));\n                // context.lineTo(middleWidth + k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.cos(sinOffset + k / 5));\n                context.lineTo(middleWidth + k * frequencyDraw, height - middleHeight - value * middleHeight * Math.cos(sinOffset + k / 5) * averageVolume);\n            }\n\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n            // AMPLITUDE VARIABLE\n\n            var amplitudeLength = amplitudeArray.length;\n            var amplitudeOffset = ~ ~(amplitudeLength / amplitudeCount);\n            var amplitudeDraw = ~ ~(width / amplitudeCount);\n\n            context.lineWidth = ~ ~(2 + Math.random() * 4);\n\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n            k = 0;\n            for (i = amplitudeOffset; i < amplitudeLength - amplitudeOffset; i += amplitudeOffset) {\n                k++;\n                value = height - height * amplitudeArray[i] / 256 - 1;\n                context.lineTo(k * amplitudeDraw, value);\n            }\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n            k = 0;\n            for (i = amplitudeLength - amplitudeOffset; i >= amplitudeOffset; i -= amplitudeOffset) {\n                k++;\n                value = height - height * amplitudeArray[i] / 256 - 1;\n                context.lineTo(k * amplitudeDraw, value);\n            }\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n            // context.beginPath();\n            // context.moveTo(0, middleHeight);\n            // k = 0;\n            // for (i = amplitudeLength - amplitudeOffset; i >= amplitudeOffset; i -= amplitudeOffset) {\n            //     k++;\n            //     context.lineTo(k * amplitudeDraw, Math.random() * 50 - 25 + middleHeight);\n            // }\n            // context.lineTo(width, middleHeight);\n            // context.stroke();\n        }\n    };\n\n    var clearCanvas = function clearCanvas() {\n        context.clearRect(0, 0, width, height);\n    };\n\n    try {\n        audioContext = new AudioContext();\n    } catch (ex) {\n        console.warn('Web Audio API is not supported in this browser');\n    }\n\n    App.bind('episode-1', 'loaded', function () {\n        episodeIsPlaying = true;\n\n        setupAudioNodes();\n        video.currentTime = 0;\n        video.play();\n        ambientLight.play();\n\n        // setup the event handler that is triggered every time enough samples have been collected\n        // trigger the audio analysis and draw the results\n        javascriptNode.addEventListener('audioprocess', function (e) {\n            var now = new Date().getTime();\n            if (lastDraw > now - frequency) return;\n            lastDraw = now;\n            // get the Time Domain data for this sample\n            averageVolume = getAverageVolume(frequencyArray) / 100;\n            analyserNode.getByteTimeDomainData(amplitudeArray);\n            analyserNode.getByteFrequencyData(frequencyArray);\n\n            // draw the display if the audio is playing\n            if (audioPlaying === true) {\n                window.requestAnimationFrame(drawSound);\n            }\n        });\n\n        // Load the Audio the first time through, otherwise play it from the buffer\n        if (audioData === null) {\n            loadSound(audioUrl);\n        } else {\n            playSound(audioData);\n        }\n\n        energyInterval = setInterval(drawEnergy, 62);\n    });\n\n    App.bind('episode-1', 'unloading', function () {\n        clearInterval(energyInterval);\n        ambientLight.stop();\n        episodeIsPlaying = false;\n        sourceNode.stop(0);\n        audioPlaying = false;\n    });\n\n    App.bind('episode-1', 'unloaded', function () {\n        clearCanvas();\n        video.currentTime = 0;\n        video.pause();\n    });\n})();\n'use strict';\n\n(function () {\n\n    // Variables\n    var canvas = $('.episode-2 .drawing canvas');\n    var video = $('.episode-2 .video');\n    var ambientLight = new AmbientLight(video, $('.episode-2 .ambient'));\n\n    App.bind('episode-2', 'loaded', function () {\n        // Begin canvas\n        // video.currentTime = 0;\n        video.play();\n        ambientLight.play();\n    });\n\n    App.bind('episode-2', 'unloading', function () {\n        // Stop the music\n        ambientLight.stop();\n    });\n\n    App.bind('episode-2', 'unloaded', function () {\n        // Clear canvas\n        // video.currentTime = 0;\n        video.pause();\n    });\n})();\n'use strict';\n\n(function () {\n\n    var GLOBAL_SPEED = 0.1,\n        HYPERSPACE_RUN = true;\n\n    App.bind('home', 'unloading', function () {\n        var interval = setInterval(function () {\n            GLOBAL_SPEED = (GLOBAL_SPEED + 0.1) * 1.3;\n            if (GLOBAL_SPEED > 70) {\n                clearInterval(interval);\n            }\n        }, 100);\n\n        var home = $('.page.home'),\n            select = $('.page.select');\n\n        // select.addEventListener('animationend', function begin(e) {\n        //     select.removeEventListener('animationend', begin);\n        // });\n\n        home.classList.add('exit-hyperspace');\n        select.classList.add('enter-hyperspace');\n    });\n\n    App.bind('home', 'unloaded', function () {\n        HYPERSPACE_RUN = false;\n\n        var home = $('.page.home'),\n            select = $('.page.select');\n\n        home.classList.remove('visible');\n        home.classList.remove('exit-hyperspace');\n        select.classList.remove('enter-hyperspace');\n    });\n\n    (function (canvas) {\n\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\n        if (canvas.getContext) {\n            var context = canvas.getContext('2d'),\n                width = canvas.width,\n                height = canvas.height,\n                starsCount = 100,\n                centerRadius = 100,\n                length = 10,\n                stars = [];\n\n            var createStar = function createStar() {\n                var randomX = Math.random(),\n                    randomY = Math.random(),\n                    color = ~ ~(Math.random() * 80 + 20);\n\n                return {\n                    x: randomX * width,\n                    y: randomY * height,\n                    xs: (randomX * width - width / 2) / 500,\n                    ys: (randomY * height - height / 2) / 500,\n                    size: ~ ~(color / 20),\n                    length: Math.random() * length,\n                    color: 'rgb(' + color + ', ' + color + ', ' + ~ ~(color + Math.random() * 20) + ')'\n                };\n            };\n\n            for (var i = 0; i < starsCount; i++) {\n                stars.push(createStar());\n            }\n\n            (function loop() {\n                if (HYPERSPACE_RUN) {\n\n                    window.requestAnimationFrame(loop);\n                    context.clearRect(0, 0, width, height);\n\n                    for (var i = 0; i < starsCount; i++) {\n                        var s = stars[i];\n                        if (s.x < 0 || s.y < 0 || s.x > width || s.y > height) {\n                            s = stars[i] = createStar();\n                        }\n                        context.strokeStyle = s.color;\n                        context.lineWidth = s.size;\n                        context.shadowBlur = 5;\n                        context.lineCap = 'round';\n                        context.shadowColor = \"#555\";\n                        context.beginPath();\n                        context.moveTo(s.x, s.y);\n                        context.lineTo(s.x + 0.1 + s.length * s.xs * GLOBAL_SPEED, s.y + s.length * s.ys * GLOBAL_SPEED);\n                        context.stroke();\n                        s.x += s.xs * GLOBAL_SPEED;\n                        s.y += s.ys * GLOBAL_SPEED;\n                    }\n                }\n            })();\n        }\n    })($('.hyperspace'));\n})();\n'use strict';\n\n(function () {\n\n    var preloadImage = function preloadImage(url) {\n        var img = new Image();\n        img.src = url;\n    };\n\n    App.init = function () {\n\n        var images = $$('img');\n        for (var i = images.length - 1; i >= 0; i--) {\n            preloadImage(images[i].src);\n        }\n\n        window.addEventListener('load', function () {\n            App.goto('home', false);\n        });\n    };\n})();\n'use strict';\n\n/**\n * Navigation between pages\n *\n */\n\n(function () {\n\n    // Bind begin button to hyperspace animation\n    $('.begin').addEventListener('click', function (e) {\n        App.call('home', 'unloading');\n        App.call('select', 'loading');\n        var select = $('.page.select');\n        select.addEventListener('animationend', function begin(e) {\n            select.removeEventListener('animationend', begin);\n            App.call('home', 'unloaded');\n            App.call('select', 'loaded');\n            $('.page.select').classList.add('visible');\n            App.setLocation('select');\n        });\n    });\n\n    // Bind navigation elements to animations\n    var bindNavigation = function bindNavigation(element) {\n        element.addEventListener('click', function (e) {\n            App.goto(this.getAttribute('data-target'), this.getAttribute('data-direction') === 'up');\n            e.preventDefault();\n        });\n    };\n\n    var elements = $$('.navigation');\n    for (var i = elements.length - 1; i >= 0; i--) {\n        bindNavigation(elements[i]);\n    }\n\n    // Change page if hash change\n    window.addEventListener('hashchange', App.gotoHash);\n})();\n'use strict';\n\n/**\n * Episode selection\n *\n */\n\n(function () {\n\n    var select = {\n        lastMove: 0,\n        leftOffset: window.screen.width / 2 - 100,\n        rightOffset: 0,\n        screenScale: 100 - 100 / 1.75,\n        selectCards: $('.select .cards')\n    };\n\n    select.percentDivisor = window.screen.width - select.rightOffset - select.leftOffset;\n\n    var selectionListener = function selectionListener(event) {\n        var now = new Date().getTime();\n        if (select.lastMove < now - 20) {\n\n            select.lastMove = now;\n            var percent = (event.screenX - select.leftOffset) / select.percentDivisor;\n\n            if (percent < 0) {\n                percent = 0;\n            } else if (percent > 1) {\n                percent = 1;\n            }\n\n            select.selectCards.style.transform = 'translateZ(0) translateX(-' + percent * select.screenScale + '%)';\n        }\n    };\n\n    App.bind('select', 'loading', function () {\n        console.log('LOADING');\n        document.addEventListener('mousemove', selectionListener);\n    });\n\n    App.bind('select', 'unloading', function () {\n        document.removeEventListener('mousemove', selectionListener);\n    });\n})();\n'use strict';\n\n(function () {\n\n    var buttons = $$('.button-vote');\n    var bindVote = function bindVote(elt) {\n        elt.addEventListener('click', function (e) {\n            for (var i = buttons.length - 1; i >= 0; i--) {\n                buttons[i].innerHTML = \"Je vote\";\n            }\n            elt.innerHTML = \"Vote validé !\";\n        });\n    };\n\n    for (var i = buttons.length - 1; i >= 0; i--) {\n        bindVote(buttons[i]);\n    }\n})();\n'use strict';\n\n// If a hash is already set, go to matching page\nApp.gotoHash(false);\n\n// Load the page\nApp.init();\n\n// Everything is OK !\nconsole.log('Libs and App loaded !');","\nfunction AmbientLight(video, ambient) {\n    this.video = video;\n    this.ambient = ambient;\n    this.light1 = $('.light-1', ambient);\n    this.light2 = $('.light-2', ambient);\n    this.interval = -1;\n}\n\nAmbientLight.prototype.play = function() {\n    this.ambient.classList.add('active');\n    var self = this;\n\n    this.interval = setInterval(function () {\n    \n        var applyTo = self.light1.classList.contains('active') ? self.light2 : self.light1;\n\n        // We show a 1x1 canvas in 100% width/height\n\n        if (!applyTo.children[0]) {\n            // If canvas doesn't exist, we create it\n            var canvas = document.createElement('canvas'),\n                context = canvas.getContext('2d');\n\n            canvas.width = 1;\n            canvas.height = 1;\n            canvas.classList.add('background');\n\n            applyTo.appendChild(canvas);\n        }\n\n        applyTo.children[0].getContext('2d').drawImage(self.video, 0, 0, 1, 1);\n\n        // As we can't do transition on gradient, we use 2 layers\n        // And we apply gradient to one, and do a transition on opacity\n        // Then next time we apply gradient to other one, etc...\n        self.light1.classList.toggle('active');\n        self.light2.classList.toggle('active');\n\n    }, 1000);\n};\n\nAmbientLight.prototype.stop = function() {\n    this.ambient.classList.remove('active');\n    clearInterval(this.interval);\n};\n","/**\n * Create App object\n *\n */\n\nvar App = {},\n    $ = document.querySelector.bind(document),\n    $$ = document.querySelectorAll.bind(document);\n\n(function () {\n\n    App.goto = function (identifier, gotoUp) {\n        var current = $('section.visible'),\n            next = $('.page.' + identifier),\n            direction = gotoUp ? 'up' : 'down';\n\n        if (!next || typeof gotoUp !== 'boolean') {\n            throw new Error('Wrong arguments: ' + next + ', ' + gotoUp);\n        } else if (current == next) {\n            throw new Error('Moving to the same page..');\n        } else {\n            if (current) {\n                var currentName = current.getAttribute('data-page');\n                App.call(currentName, 'unloading');\n                current.classList.remove('visible');\n                current.classList.add('exit-' + direction);\n                current.addEventListener('animationend', function animationend(e) {\n                    App.call(currentName, 'unloaded');\n                    current.removeEventListener('animationend', animationend);\n                    current.classList.remove('exit-' + direction);\n                });\n            }\n            App.call(identifier, 'loading');\n            next.classList.add('visible');\n            next.classList.add('enter-' + direction);\n            next.addEventListener('animationend', function animationend(e) {\n                App.call(identifier, 'loaded');\n                next.removeEventListener('animationend', animationend);\n                next.classList.remove('enter-' + direction);\n                App.setLocation(identifier);\n            });\n        }\n    };\n\n    App.home = function () {\n        // Rerun the page to restart the canvas\n        window.location.reload();\n    };\n\n    var isChangingHash = false;\n\n    App.setLocation = function (hash) {\n        isChangingHash = true;\n        window.location.hash = '#/' + hash;\n        setTimeout(function () {\n            isChangingHash = false;\n        }, 1);\n    };\n\n    App.gotoHash = function (homeFallback) {\n        if (isChangingHash) return;\n        if (window.location.hash && window.location.hash.length > 2) {\n            var hash = window.location.hash.substring(2),\n                page = $('.page.' + hash);\n\n            if (hash === 'home') {\n                App.home();\n                return;\n            } else if (page && page.classList.contains('page')) {\n                var current = $('section.visible');\n                if (current) {\n                    current.classList.remove('visible');\n                    var currentName = current.getAttribute('data-page');\n                    App.call(currentName, 'unloading');\n                    App.call(currentName, 'unloaded');\n                }\n                page.classList.add('visible');\n                App.call(hash, 'loading');\n                App.call(hash, 'loaded');\n                window.HYPERSPACE = false;\n                return;\n            }\n        }\n        if (homeFallback) {\n            App.home();\n        }\n    };\n\n    var callbacks = {};\n    \n    App.call = function (page, state) {\n        if (callbacks[page] && callbacks[page][state]) {\n            for (var i = callbacks[page][state].length - 1; i >= 0; i--) {\n                callbacks[page][state][i]();\n            }\n        }\n    };\n\n    App.bind = function (page, state, callback) {\n        if (!callbacks[page]) {\n            callbacks[page] = {};\n        }\n        if (!callbacks[page][state]) {\n            callbacks[page][state] = [];\n        }\n        callbacks[page][state].push(callback);\n    };\n\n})();\n\n","\nwindow.AudioContext = (function() {\n    return  window.AudioContext || window.webkitAudioContext || window.mozAudioContext;\n})();\n","/* Compatible avec tous les navigateurs */\n(function() {\n    var lastTime = 0;\n    var vendors = ['webkit', 'moz'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n          window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame)\n        window.requestAnimationFrame = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n              timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n\n    if (!window.cancelAnimationFrame)\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n}());\n","\n(function () {\n\n    var episodeIsPlaying = false;\n\n    var canvas = $('.episode-1 .drawing canvas');\n    var video = $('.episode-1 .video');\n    var ambientLight = new AmbientLight(video, $('.episode-1 .ambient'));\n\n    if (!canvas || !canvas.getContext) return;\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    var context = canvas.getContext('2d'),\n        width = canvas.width,\n        height = canvas.height;\n\n    var frequency = 30,\n        amplitudeCount = 30,\n        frequencyCount = 40;\n\n    // Tutorial from: http://apprentice.craic.com/tutorials/30\n\n    var audioContext;\n    var audioBuffer;\n    var sourceNode;\n    var analyserNode;\n    var javascriptNode;\n    var audioData = null;\n    var audioPlaying = false;\n    var sampleSize = 1024;\n    var amplitudeArray;\n    var frequencyArray;\n    var audioUrl = 'media/episode1.mp3';\n    var middleWidth = ~~(width / 2);\n    var middleHeight = ~~(height / 2);\n    var lastDraw = 0;\n    var energyInterval = -1;\n    var averageVolume = 0;\n    var sinOffset = Math.PI / 2;\n\n    var setupAudioNodes = function () {\n        sourceNode     = audioContext.createBufferSource();\n        analyserNode   = audioContext.createAnalyser();\n        javascriptNode = audioContext.createScriptProcessor(sampleSize, 1, 1);\n        // Create the array for the data values\n        amplitudeArray = new Uint8Array(analyserNode.frequencyBinCount);\n        frequencyArray = new Uint8Array(analyserNode.frequencyBinCount);\n        // Now connect the nodes together\n        sourceNode.connect(audioContext.destination);\n        sourceNode.connect(analyserNode);\n        analyserNode.connect(javascriptNode);\n        javascriptNode.connect(audioContext.destination);\n    };\n\n    // Load the audio from the URL via Ajax and store it in global variable audioData\n    // Note that the audio load is asynchronous\n    var loadSound = function (url) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        // When loaded, decode the data and play the sound\n        request.onload = function () {\n            audioContext.decodeAudioData(request.response, function (buffer) {\n                audioData = buffer;\n                playSound(audioData);\n            }, onError);\n        };\n        request.send();\n    };\n\n    // Play the audio and loop until stopped\n    var playSound = function (buffer) {\n        sourceNode.buffer = buffer;\n        // sourceNode.start();    // Play the sound now\n        sourceNode.start(0, 38);\n        sourceNode.loop = true;\n        audioPlaying = true;\n    };\n\n    var onError = function (e) {\n        console.warn(e);\n    };\n\n    var getAverageVolume = function (array) {\n        var values = 0;\n        var average;\n \n        var length = array.length;\n \n        // get all the frequency amplitudes\n        for (var i = 0; i < length; i++) {\n            values += array[i];\n        }\n \n        average = values / length;\n        return average;\n    };\n\n    context.strokeStyle = 'white';\n    context.shadowBlur = 100;\n    context.shadowColor = 'rgb(220, 20, 220)';\n\n    var drawEnergy = function () {\n        // RANDOM ELECTRIC ARC\n\n        // clearCanvas();\n        context.lineWidth = 3;\n\n        var k, i, value = 0;\n        var amplitudeLength = amplitudeArray.length;\n        var amplitudeOffset = ~~(amplitudeLength / amplitudeCount);\n        var amplitudeDraw = ~~(width / amplitudeCount);\n        var size = 150;\n\n        context.beginPath();\n        context.moveTo(0, middleHeight);\n        k = 0;\n        for (i = amplitudeOffset; i < amplitudeLength - amplitudeOffset; i += amplitudeOffset) {\n            k++;\n            context.lineTo(k * amplitudeDraw, (Math.random() * size - size/2) * averageVolume + middleHeight);\n        }\n        context.lineTo(width, middleHeight);\n        context.stroke();\n    };\n\n    var drawSound = function () {\n        if (episodeIsPlaying) {\n            clearCanvas();\n\n            var k, i, value = 0;\n\n            // FREQUENCY VARIABLE\n\n            var frenquencyLength = frequencyArray.length - 300;\n            var frenquencyOffset = ~~(frenquencyLength / frequencyCount);\n            var frequencyDraw = ~~(middleWidth / frequencyCount);\n\n            // DOUBLE FREQUENCY ARC - SYMMETRIC\n\n            context.lineWidth = ~~(3 + Math.random() * 6);\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n\n            k = 0;\n            for (i = frenquencyLength - frenquencyOffset; i >= 0; i -= frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                // context.lineTo(k * frequencyDraw, height - middleHeight - (value * middleHeight));\n                // context.lineTo(k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.sin(sinOffset + k / 5));\n                context.lineTo(k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.sin(sinOffset + k / 5) * averageVolume);\n            }\n\n            k = 0;\n            for (i = 0; i < frenquencyLength - frenquencyOffset * 2; i += frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                // context.lineTo(middleWidth + k * frequencyDraw, height - middleHeight - (value * middleHeight));\n                // context.lineTo(middleWidth + k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.cos(sinOffset + k / 5));\n                context.lineTo(middleWidth + k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.cos(sinOffset + k / 5) * averageVolume);\n            }\n\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n            // AMPLITUDE VARIABLE\n\n            var amplitudeLength = amplitudeArray.length;\n            var amplitudeOffset = ~~(amplitudeLength / amplitudeCount);\n            var amplitudeDraw = ~~(width / amplitudeCount);\n\n            context.lineWidth = ~~(2 + Math.random() * 4);\n\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n            k = 0;\n            for (i = amplitudeOffset; i < amplitudeLength - amplitudeOffset; i += amplitudeOffset) {\n                k++;\n                value = height - (height * amplitudeArray[i] / 256) - 1;\n                context.lineTo(k * amplitudeDraw, value);\n\n            }\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n            k = 0;\n            for (i = amplitudeLength - amplitudeOffset; i >= amplitudeOffset; i -= amplitudeOffset) {\n                k++;\n                value = height - (height * amplitudeArray[i] / 256) - 1;\n                context.lineTo(k * amplitudeDraw, value);\n            }\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n            // context.beginPath();\n            // context.moveTo(0, middleHeight);\n            // k = 0;\n            // for (i = amplitudeLength - amplitudeOffset; i >= amplitudeOffset; i -= amplitudeOffset) {\n            //     k++;\n            //     context.lineTo(k * amplitudeDraw, Math.random() * 50 - 25 + middleHeight);\n            // }\n            // context.lineTo(width, middleHeight);\n            // context.stroke();\n        }\n    };\n\n    var clearCanvas = function () {\n        context.clearRect(0, 0, width, height);\n    };\n\n    try {\n        audioContext = new AudioContext();\n    } catch (ex) {\n        console.warn('Web Audio API is not supported in this browser');\n    }\n\n\n    App.bind('episode-1', 'loaded', function () {\n        episodeIsPlaying = true;\n\n        setupAudioNodes();\n        video.currentTime = 0;\n        video.play();\n        ambientLight.play();\n\n        // setup the event handler that is triggered every time enough samples have been collected\n        // trigger the audio analysis and draw the results\n        javascriptNode.addEventListener('audioprocess', function (e) {\n            var now = new Date().getTime();\n            if (lastDraw > now - frequency) return;\n            lastDraw = now;\n            // get the Time Domain data for this sample\n            averageVolume = getAverageVolume(frequencyArray) / 100;\n            analyserNode.getByteTimeDomainData(amplitudeArray);\n            analyserNode.getByteFrequencyData(frequencyArray);\n\n            // draw the display if the audio is playing\n            if (audioPlaying === true) {\n                window.requestAnimationFrame(drawSound);\n            }\n        });\n\n        // Load the Audio the first time through, otherwise play it from the buffer\n        if (audioData === null) {\n            loadSound(audioUrl);\n        } else {\n            playSound(audioData);\n        }\n\n        energyInterval = setInterval(drawEnergy, 62);\n\n    });\n\n    App.bind('episode-1', 'unloading', function () {\n        clearInterval(energyInterval);\n        ambientLight.stop();\n        episodeIsPlaying = false;\n        sourceNode.stop(0);\n        audioPlaying = false;\n    });\n\n    App.bind('episode-1', 'unloaded', function () {\n        clearCanvas();\n        video.currentTime = 0;\n        video.pause();\n    });\n\n})();\n","\n(function () {\n\n    // Variables\n    var canvas = $('.episode-2 .drawing canvas');\n    var video = $('.episode-2 .video');\n    var ambientLight = new AmbientLight(video, $('.episode-2 .ambient'));\n\n\n    App.bind('episode-2', 'loaded', function () {\n        // Begin canvas\n        // video.currentTime = 0;\n        video.play();\n        ambientLight.play();\n\n    });\n\n    App.bind('episode-2', 'unloading', function () {\n        // Stop the music\n        ambientLight.stop();\n\n    });\n\n    App.bind('episode-2', 'unloaded', function () {\n        // Clear canvas\n        // video.currentTime = 0;\n        video.pause();\n\n    });\n\n})();\n","\n(function () {\n\n    var GLOBAL_SPEED = 0.1,\n        HYPERSPACE_RUN = true;\n\n    App.bind('home', 'unloading', function () {\n        var interval = setInterval(function () {\n            GLOBAL_SPEED = (GLOBAL_SPEED + 0.1) * 1.3;\n            if (GLOBAL_SPEED > 70) {\n                clearInterval(interval);\n            }\n        }, 100);\n\n        var home = $('.page.home'),\n            select = $('.page.select');\n\n        // select.addEventListener('animationend', function begin(e) { \n        //     select.removeEventListener('animationend', begin);\n        // });\n\n        home.classList.add('exit-hyperspace');\n        select.classList.add('enter-hyperspace');\n    });\n\n    App.bind('home', 'unloaded', function () {\n        HYPERSPACE_RUN = false;\n\n        var home = $('.page.home'),\n            select = $('.page.select');\n\n        home.classList.remove('visible');\n        home.classList.remove('exit-hyperspace');\n        select.classList.remove('enter-hyperspace');\n    });\n\n    (function (canvas) {\n\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\n        if (canvas.getContext) {\n            var context = canvas.getContext('2d'),\n                width = canvas.width,\n                height = canvas.height,\n                starsCount = 100,\n                centerRadius = 100,\n                length = 10,\n                stars = [];\n\n            var createStar = function () {\n                var randomX = Math.random(),\n                    randomY = Math.random(),\n                    color = ~~(Math.random() * 80 + 20);\n\n                return {\n                    x: randomX * width,\n                    y: randomY * height,\n                    xs: (randomX * width - width/2) / 500,\n                    ys: (randomY * height - height/2) / 500,\n                    size: ~~(color / 20),\n                    length: Math.random() * length,\n                    color: 'rgb(' + color + ', ' + color + ', ' + ~~(color + Math.random() * 20) + ')'\n                };\n            };\n\n            for (var i = 0; i < starsCount; i++) {\n                stars.push(createStar());\n            }\n\n            (function loop() {\n                if (HYPERSPACE_RUN) {\n\n                    window.requestAnimationFrame(loop);\n                    context.clearRect(0, 0, width, height);\n\n                    for (var i = 0; i < starsCount; i++) {\n                        var s = stars[i];\n                        if (s.x < 0 || s.y < 0 || s.x > width || s.y > height) {\n                            s = stars[i] = createStar();\n                        }\n                        context.strokeStyle = s.color;\n                        context.lineWidth = s.size;\n                        context.shadowBlur = 5;\n                        context.lineCap = 'round';\n                        context.shadowColor = \"#555\";\n                        context.beginPath();\n                        context.moveTo(s.x, s.y);\n                        context.lineTo(s.x + 0.1 + s.length * s.xs * GLOBAL_SPEED, s.y + s.length * s.ys * GLOBAL_SPEED);\n                        context.stroke();\n                        s.x += s.xs * GLOBAL_SPEED;\n                        s.y += s.ys * GLOBAL_SPEED;\n                    }\n                }\n            })();\n        }\n\n    })($('.hyperspace'));\n\n})();","\n(function () {\n\n    var preloadImage = function (url) {\n        var img = new Image();\n        img.src = url;\n    };\n\n    App.init = function () {\n\n        var images = $$('img');\n        for (var i = images.length - 1; i >= 0; i--) {\n            preloadImage(images[i].src);\n        }\n\n        window.addEventListener('load', function () {\n            App.goto('home', false);\n        });\n\n    };\n\n})();\n","/**\n * Navigation between pages\n *\n */\n\n(function () {\n\n    // Bind begin button to hyperspace animation\n    $('.begin').addEventListener('click', function (e) {\n        App.call('home', 'unloading');\n        App.call('select', 'loading');\n        var select = $('.page.select');\n        select.addEventListener('animationend', function begin(e) { \n            select.removeEventListener('animationend', begin);\n            App.call('home', 'unloaded');\n            App.call('select', 'loaded');\n            $('.page.select').classList.add('visible');\n            App.setLocation('select');\n        });\n    });\n\n    // Bind navigation elements to animations\n    var bindNavigation = function (element) {\n        element.addEventListener('click', function (e) {\n            App.goto(this.getAttribute('data-target'), this.getAttribute('data-direction') === 'up');\n            e.preventDefault();\n        });\n    };\n\n    var elements = $$('.navigation');\n    for (var i = elements.length - 1; i >= 0; i--) {\n        bindNavigation(elements[i]);\n    }\n\n    // Change page if hash change\n    window.addEventListener('hashchange', App.gotoHash);\n\n})();\n","/**\n * Episode selection\n *\n */\n\n(function () {\n\n    var select = {\n        lastMove: 0,\n        leftOffset: window.screen.width / 2 - 100,\n        rightOffset: 0,\n        screenScale: (100 - 100 / 1.75),\n        selectCards: $('.select .cards')\n    };\n\n    select.percentDivisor = window.screen.width - select.rightOffset - select.leftOffset;\n\n    var selectionListener = function(event) {\n        var now = new Date().getTime();\n        if (select.lastMove < now - 20) {\n\n            select.lastMove = now;\n            var percent = (event.screenX - select.leftOffset) / select.percentDivisor;\n            \n            if (percent < 0) {\n                percent = 0;\n            } else if (percent > 1) {\n                percent = 1;\n            }\n\n            select.selectCards.style.transform = 'translateZ(0) translateX(-' + percent * select.screenScale + '%)';\n        }\n    };\n\n    App.bind('select', 'loading', function () {\n        console.log('LOADING');\n        document.addEventListener('mousemove', selectionListener);\n    });\n\n    App.bind('select', 'unloading', function () {\n        document.removeEventListener('mousemove', selectionListener);\n    });\n\n})();\n","\n(function () {\n\n    var buttons = $$('.button-vote');\n    var bindVote = function (elt) {\n        elt.addEventListener('click', function (e) {\n            for (var i = buttons.length - 1; i >= 0; i--) {\n                buttons[i].innerHTML = \"Je vote\";\n            }\n            elt.innerHTML = \"Vote validé !\";\n        });\n    };\n\n    for (var i = buttons.length - 1; i >= 0; i--) {\n        bindVote(buttons[i]);\n    }\n\n})();\n","\n// If a hash is already set, go to matching page\nApp.gotoHash(false);\n\n// Load the page\nApp.init();\n\n// Everything is OK !\nconsole.log('Libs and App loaded !');\n"],"sourceRoot":"/source/"}