{"version":3,"sources":["app.js","canvas.polyfill.js","selector.js","hyperspace.js","navigation.js","main.js"],"names":["App","lastTime","vendors","x","length","window","requestAnimationFrame","cancelAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","clearTimeout","$","document","querySelector","bind","$$","querySelectorAll","canvas","width","innerWidth","height","innerHeight","PARTICLE_SPEED","getContext","ctx","w","h","particles","loop","clearRect","lineCap","spawnRadius","speed","createParticle","randomX","random","randomY","y","color","xs","ys","size","push","i","p","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","identifier","gotoUp","current","next","direction","Error","classList","remove","add","addEventListener","e","bindNavigation","this","getAttribute","elements","console","log"],"mappings":"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","file":"script.js","sourcesContent":["/**\n * Create App object\n *\n */\n\nvar App = {};\n","/* Compatible avec tous les navigateurs */\n(function() {\n    var lastTime = 0;\n    var vendors = ['webkit', 'moz'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n          window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame)\n        window.requestAnimationFrame = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n              timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n\n    if (!window.cancelAnimationFrame)\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n}());\n","\nvar $ = document.querySelector.bind(document),\n    $$ = document.querySelectorAll.bind(document);\n","\n(function (canvas) {\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    window.PARTICLE_SPEED = 25;\n\n    if (canvas.getContext) {\n        var ctx = canvas.getContext('2d');\n        var w = canvas.width;\n        var h = canvas.height;\n        var particles = [];\n            window.particles = particles;\n\n        (function loop() {\n            window.requestAnimationFrame(loop);\n            // window.loop = loop;\n\n            ctx.clearRect(0, 0, w, h);\n\n            ctx.lineCap = 'round';\n\n            var spawnRadius = 300,\n                speed = window.PARTICLE_SPEED,\n                length = 500,\n                maxParticules = 100;\n\n            window.createParticle = function createParticle() {\n                var randomX = Math.random() * spawnRadius - spawnRadius / 2,\n                    randomY = Math.random() * spawnRadius - spawnRadius / 2,\n                    x = w/2 + randomX,\n                    y = h/2 + randomY,\n                    color = ~~(Math.random() * 80 + 20);\n\n                return {\n                    x: x,\n                    y: y,\n                    xs: randomX / 500,\n                    ys: randomY / 500,\n                    size: ~~(color / 20),\n                    length: Math.random() * length,\n                    color: 'rgb(' + color + ', ' + color + ', ' + color + ')'\n                };\n            };\n\n            if (particles.length < 300) {\n                particles.push(createParticle());\n            }\n\n            for (var i = particles.length - 1; i >= 0; i--) {\n                var p = particles[i];\n                if (p.x < 0 || p.y < 0 || p.x > w || p.y > h) {\n                    p = particles[i] = createParticle();\n                }\n                ctx.strokeStyle = p.color;\n                ctx.lineWidth = p.size;\n                ctx.beginPath();\n                ctx.moveTo(p.x, p.y);\n                ctx.lineTo(p.x + p.length * p.xs, p.y + p.length * p.ys);\n                ctx.stroke();\n                p.x += p.xs * speed;\n                p.y += p.ys * speed;\n            }\n\n/*\n            var spawnRadius = 300;\n            var speed = spawnRadius / 50;\n\n            var init = [];\n            var maxParts = 100;\n            for (var a = 0; a < maxParts; a++) {\n                var initX = w / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n                var initY = h / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n\n                var r = Math.round(Math.random() * 255);\n                var g = Math.round(Math.random() * 255);\n                var b = Math.round(Math.random() * 255);\n\n                init.push({\n                    x: initX,\n                    y: initY,\n                    xs: (initX - w / 2) / speed,\n                    ys: (initY - h / 2) / speed,\n                    l: Math.random() * 10,\n                    color: 'rgb(' + r + ',' + g + ',' + b + ')'\n                });\n            }\n\n            var particles = [];\n            for (var i = 0; i < maxParts; i++) {\n                particles[i] = init[i];\n            }\n\n            var draw = function () {\n                for (var c = 0; c < particles.length; c++) {\n                    var p = particles[c];\n                    ctx.strokeStyle = 'rgba(255,255,255,' + p.l / 20 + ')';\n                    ctx.beginPath();\n                    ctx.moveTo(p.x, p.y);\n                    ctx.lineTo(p.x + p.l * p.xs, p.y + p.l * p.ys);\n                    ctx.stroke();\n                }\n                move();\n            };\n\n            var move = function () {\n                for (var j = 0; j < particles.length; j++) {\n                    var p = particles[j];\n                    p.x += p.xs;\n                    p.y += p.ys;\n\n                    // if particle position exceeds the canvas\n                    if (p.x < 0 || p.y < 0 || p.x > w || p.y > h) {\n                        p.x = w / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n                        p.y = h / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n                        p.xs = (p.x - w / 2) / speed;\n                        p.ys = (p.y - h / 2) / speed;\n                    }\n                }\n            };\n\n            draw();\n*/\n\n        })();\n\n    }\n\n})($('.hyperspace'));\n","/**\n * Navigation between pages\n *\n */\n\nApp.goto = function (identifier, gotoUp) {\n    var current = $('section.visible'),\n        next = $('.' + identifier),\n        direction = gotoUp ? 'up' : 'down';\n\n    if (!next || typeof gotoUp !== 'boolean') {\n        throw new Error('Wrong arguments: ' + next + ', ' + gotoUp);\n    } else if (current == next) {\n        throw new Error('Moving to the same page..');\n    } else {\n        if (current) {\n            current.classList.remove('visible');\n            current.classList.add('exit-' + direction);\n            current.addEventListener('animationend', function (e) {\n                current.classList.remove('exit-' + direction);\n            });\n        }\n        next.classList.add('visible');\n        next.classList.add('enter-' + direction);\n        next.addEventListener('animationend', function (e) {\n            next.classList.remove('enter-' + direction);\n        });\n    }\n};\n\nvar bindNavigation = function (element) {\n    element.addEventListener('click', function (e) {\n        App.goto(this.getAttribute('data-target'), this.getAttribute('data-direction') === 'up');\n    });\n};\n\nvar elements = $$('.begin');\nfor (var i = elements.length - 1; i >= 0; i--) {\n    bindNavigation(elements[i]);\n}\n","\nconsole.log('Libs and App loaded !');\n"],"sourceRoot":"/source/"}