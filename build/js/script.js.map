{"version":3,"sources":["app.js","canvas.polyfill.js","selector.js","hyperspace.js","navigation.js","main.js"],"names":["App","lastTime","vendors","x","length","window","requestAnimationFrame","cancelAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","clearTimeout","$","document","querySelector","bind","$$","querySelectorAll","globalSpeed","addEventListener","e","interval","setInterval","clearInterval","classList","add","canvas","width","innerWidth","height","innerHeight","getContext","ctx","w","h","starsCount","stars","lineCap","createStar","atCenter","randomX","randomY","random","y","color","xs","ys","size","i","push","loop","clearRect","s","strokeStyle","lineWidth","shadowBlur","shadowColor","beginPath","moveTo","lineTo","stroke","identifier","gotoUp","current","next","direction","Error","remove","bindNavigation","this","getAttribute","elements","console","log"],"mappings":"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","file":"script.js","sourcesContent":["/**\n * Create App object\n *\n */\n\nvar App = {};\n","/* Compatible avec tous les navigateurs */\n(function() {\n    var lastTime = 0;\n    var vendors = ['webkit', 'moz'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n          window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame)\n        window.requestAnimationFrame = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n              timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n\n    if (!window.cancelAnimationFrame)\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n}());\n","\nvar $ = document.querySelector.bind(document),\n    $$ = document.querySelectorAll.bind(document);\n","\nwindow.globalSpeed = 0.1;\n\n$('.begin').addEventListener('click', function (e) {\n    var interval = setInterval(function () {\n        window.globalSpeed = (window.globalSpeed + 0.1) * 1.3;\n        if (window.globalSpeed > 70) {\n            clearInterval(interval);\n        }\n    }, 100);\n    setTimeout(function () {\n        $('.home').classList.add('exit-hyperspace');\n        $('.select').classList.add('enter-hyperspace');\n    }, 2000);\n});\n\n(function (canvas) {\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    if (canvas.getContext) {\n        var ctx = canvas.getContext('2d'),\n            w = canvas.width,\n            h = canvas.height,\n            starsCount = 100,\n            globalSpeed = 0.1,\n            length = 10,\n            stars = [];\n\n        ctx.lineCap = 'round';\n\n        var createStar = function (atCenter) {\n            var randomX, randomY;\n\n            if (atCenter) {\n                randomX = Math.random() * 100 - 100 / 2;\n                randomY = Math.random() * 100 - 100 / 2;\n            } else {\n                randomX = Math.random() * w;\n                randomY = Math.random() * h;\n            }\n\n            var x = atCenter ? w/2 : 0 + randomX,\n                y = atCenter ? h/2 : 0 + randomY,\n                color = ~~(Math.random() * 80 + 20);\n\n            return {\n                x: x,\n                y: y,\n                xs: (randomX - w/2) / 500,\n                ys: (randomY - h/2) / 500,\n                size: ~~(color / 20),\n                length: Math.random() * length,\n                color: 'rgb(' + color + ', ' + color + ', ' + ~~(color + Math.random() * 20) + ')'\n            };\n        };\n\n        window.stars = stars;\n        window.globalSpeed = globalSpeed;\n        window.createStar = createStar;\n\n        for (var i = 0; i < starsCount; i++) {\n            stars.push(createStar(false));\n        }\n\n        (function loop() {\n            window.requestAnimationFrame(loop);\n            // window.loop = loop;\n\n            ctx.clearRect(0, 0, w, h);\n\n            for (var i = 0; i < starsCount; i++) {\n                var s = stars[i];\n                if (s.x < 0 || s.y < 0 || s.x > w || s.y > h) {\n                    s = stars[i] = createStar(false);\n                }\n                ctx.strokeStyle = s.color;\n                ctx.lineWidth = s.size;\n                ctx.shadowBlur = 5;\n                ctx.shadowColor = \"#555\";\n                ctx.beginPath();\n                ctx.moveTo(s.x, s.y);\n                ctx.lineTo(s.x + 0.1 + s.length * s.xs * window.globalSpeed, s.y + s.length * s.ys * window.globalSpeed);\n                ctx.stroke();\n                s.x += s.xs * window.globalSpeed;\n                s.y += s.ys * window.globalSpeed;\n            }\n\n        })();\n    }\n\n})($('.hyperspace'));\n\n\n\n\n\n\n(function (canvas) {\n    if (1) return;\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    window.PARTICLE_SPEED = 25;\n\n    if (canvas.getContext) {\n        var ctx = canvas.getContext('2d');\n        var w = canvas.width;\n        var h = canvas.height;\n        var particles = [];\n            window.particles = particles;\n\n        (function loop() {\n            window.requestAnimationFrame(loop);\n            // window.loop = loop;\n\n            ctx.clearRect(0, 0, w, h);\n\n            ctx.lineCap = 'round';\n\n            var spawnRadius = 300,\n                speed = window.PARTICLE_SPEED,\n                length = 500,\n                maxParticules = 100;\n\n            window.createParticle = function createParticle() {\n                var randomX = Math.random() * spawnRadius - spawnRadius / 2,\n                    randomY = Math.random() * spawnRadius - spawnRadius / 2,\n                    x = w/2 + randomX,\n                    y = h/2 + randomY,\n                    color = ~~(Math.random() * 80 + 20);\n\n                return {\n                    x: x,\n                    y: y,\n                    xs: randomX / 500,\n                    ys: randomY / 500,\n                    size: ~~(color / 20),\n                    length: Math.random() * length,\n                    color: 'rgb(' + color + ', ' + color + ', ' + color + ')'\n                };\n            };\n\n            if (particles.length < 300) {\n                particles.push(createParticle());\n            }\n\n            for (var i = particles.length - 1; i >= 0; i--) {\n                var p = particles[i];\n                if (p.x < 0 || p.y < 0 || p.x > w || p.y > h) {\n                    p = particles[i] = createParticle();\n                }\n                ctx.strokeStyle = p.color;\n                ctx.lineWidth = p.size;\n                ctx.beginPath();\n                ctx.moveTo(p.x, p.y);\n                ctx.lineTo(p.x + p.length * p.xs, p.y + p.length * p.ys);\n                ctx.stroke();\n                p.x += p.xs * speed;\n                p.y += p.ys * speed;\n            }\n\n/*\n            var spawnRadius = 300;\n            var speed = spawnRadius / 50;\n\n            var init = [];\n            var maxParts = 100;\n            for (var a = 0; a < maxParts; a++) {\n                var initX = w / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n                var initY = h / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n\n                var r = Math.round(Math.random() * 255);\n                var g = Math.round(Math.random() * 255);\n                var b = Math.round(Math.random() * 255);\n\n                init.push({\n                    x: initX,\n                    y: initY,\n                    xs: (initX - w / 2) / speed,\n                    ys: (initY - h / 2) / speed,\n                    l: Math.random() * 10,\n                    color: 'rgb(' + r + ',' + g + ',' + b + ')'\n                });\n            }\n\n            var particles = [];\n            for (var i = 0; i < maxParts; i++) {\n                particles[i] = init[i];\n            }\n\n            var draw = function () {\n                for (var c = 0; c < particles.length; c++) {\n                    var p = particles[c];\n                    ctx.strokeStyle = 'rgba(255,255,255,' + p.l / 20 + ')';\n                    ctx.beginPath();\n                    ctx.moveTo(p.x, p.y);\n                    ctx.lineTo(p.x + p.l * p.xs, p.y + p.l * p.ys);\n                    ctx.stroke();\n                }\n                move();\n            };\n\n            var move = function () {\n                for (var j = 0; j < particles.length; j++) {\n                    var p = particles[j];\n                    p.x += p.xs;\n                    p.y += p.ys;\n\n                    // if particle position exceeds the canvas\n                    if (p.x < 0 || p.y < 0 || p.x > w || p.y > h) {\n                        p.x = w / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n                        p.y = h / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n                        p.xs = (p.x - w / 2) / speed;\n                        p.ys = (p.y - h / 2) / speed;\n                    }\n                }\n            };\n\n            draw();\n*/\n\n        })();\n\n    }\n\n})($('.hyperspace'));\n","/**\n * Navigation between pages\n *\n */\n\nApp.goto = function (identifier, gotoUp) {\n    var current = $('section.visible'),\n        next = $('.' + identifier),\n        direction = gotoUp ? 'up' : 'down';\n\n    if (!next || typeof gotoUp !== 'boolean') {\n        throw new Error('Wrong arguments: ' + next + ', ' + gotoUp);\n    } else if (current == next) {\n        throw new Error('Moving to the same page..');\n    } else {\n        if (current) {\n            current.classList.remove('visible');\n            current.classList.add('exit-' + direction);\n            current.addEventListener('animationend', function (e) {\n                current.classList.remove('exit-' + direction);\n            });\n        }\n        next.classList.add('visible');\n        next.classList.add('enter-' + direction);\n        next.addEventListener('animationend', function (e) {\n            next.classList.remove('enter-' + direction);\n        });\n    }\n};\n\nvar bindNavigation = function (element) {\n    element.addEventListener('click', function (e) {\n        App.goto(this.getAttribute('data-target'), this.getAttribute('data-direction') === 'up');\n    });\n};\n\nvar elements = $$('.navigation');\nfor (var i = elements.length - 1; i >= 0; i--) {\n    bindNavigation(elements[i]);\n}\n","\nconsole.log('Libs and App loaded !');\n"],"sourceRoot":"/source/"}